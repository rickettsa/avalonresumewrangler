# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
#CENTOS 6 install pip?
    config.vm.box = "geerlingguy/centos7"
  #  config.vm.box = "cyvaquero/centos-6.6_ansible"
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:4567" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 80, host: 4567
  config.vm.network "forwarded_port", guest: 9200, host: 4300

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # This is hard-coded into several spots in the ansible provisioner files.
  # Make sure to change them too.
  config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider :virtualbox do |vb|
     vb.name = "wrangler"
   end
   config.vm.hostname = "wrangler"
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL

  #
  #config.vm.provision "shell" do |s|
  #  s.path = "download-github-repo.sh"
  #  s.args   = ["",]

#  config.vm.provision :shell, path: "bootstrap.sh"

# Ansible-local installs latest version of Ansible on VM. 
#  Bug in Vagrant 1.8.1 does not recognize Ansible 2.0 installation
#  Install packages not included in vagrant base box
   config.vm.provision "shell", inline: "sudo yum install -y gcc python-pip python-devel libffi-devel openssl-devel && sudo pip install backports.ssl_match_hostname ansible==1.9.2"

#  The playbook is run right after the install. This causes problems as the geerlingguy.apache and geerlingguy.java roles must be installed
#  before the playbook is run. Workaround: the roles are included in the provisioning folder.
#  TODO: update roles automatically
  config.vm.provision "ansible_local" do |ansible|
    ansible.playbook = "provisioning/site.yml"
    ansible.groups = {
      "wrangler" => ["default"],
      "elastic" => ["default"],
      "flask" => ["default"]
    }
    ansible.verbose = 'v'
  end
# Installing python components requires python2.7.9. 
# The first provisioner run establishes a virtualenv for the vagrant user with 2.7.9 as the default
# Using a second provisioner file uses the new default python
  config.vm.provision "ansible_local" do |newpython|
    newpython.playbook = "provisioning/site2.yml"
    newpython.groups = {
      "wrangler" => ["default"],
      "elastic" => ["default"],
      "flask" => ["default"]
    }
    newpython.verbose = 'v'
  end

# Always restart grunt watch, elastic, flask for any vagrant up
# TODO: replace elastic start with chkconfig in elastic role..
  config.vm.provision :shell, path: "provisioning/shell/bootstrap3.sh" ,run: "always"

end
